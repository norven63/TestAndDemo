package com.qihoo.security.lite;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.qihoo.security.lite.ApkDownloadInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "APK_DOWNLOAD_INFO".
*/
public class ApkDownloadInfoDao extends AbstractDao<ApkDownloadInfo, Long> {

    public static final String TABLENAME = "APK_DOWNLOAD_INFO";

    /**
     * Properties of entity ApkDownloadInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property TaskId = new Property(1, int.class, "taskId", false, "TASK_ID");
        public final static Property Progress = new Property(2, Integer.class, "progress", false, "PROGRESS");
        public final static Property Statu = new Property(3, Integer.class, "statu", false, "STATU");
        public final static Property Total = new Property(4, Long.class, "total", false, "TOTAL");
        public final static Property Label = new Property(5, String.class, "label", false, "LABEL");
        public final static Property Url = new Property(6, String.class, "url", false, "URL");
        public final static Property FileName = new Property(7, String.class, "fileName", false, "FILE_NAME");
        public final static Property FilePath = new Property(8, String.class, "filePath", false, "FILE_PATH");
        public final static Property PkgName = new Property(9, String.class, "pkgName", false, "PKG_NAME");
    };


    public ApkDownloadInfoDao(DaoConfig config) {
        super(config);
    }
    
    public ApkDownloadInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"APK_DOWNLOAD_INFO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"TASK_ID\" INTEGER NOT NULL ," + // 1: taskId
                "\"PROGRESS\" INTEGER," + // 2: progress
                "\"STATU\" INTEGER," + // 3: statu
                "\"TOTAL\" INTEGER," + // 4: total
                "\"LABEL\" TEXT," + // 5: label
                "\"URL\" TEXT," + // 6: url
                "\"FILE_NAME\" TEXT," + // 7: fileName
                "\"FILE_PATH\" TEXT," + // 8: filePath
                "\"PKG_NAME\" TEXT);"); // 9: pkgName
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"APK_DOWNLOAD_INFO\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ApkDownloadInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getTaskId());
 
        Integer progress = entity.getProgress();
        if (progress != null) {
            stmt.bindLong(3, progress);
        }
 
        Integer statu = entity.getStatu();
        if (statu != null) {
            stmt.bindLong(4, statu);
        }
 
        Long total = entity.getTotal();
        if (total != null) {
            stmt.bindLong(5, total);
        }
 
        String label = entity.getLabel();
        if (label != null) {
            stmt.bindString(6, label);
        }
 
        String url = entity.getUrl();
        if (url != null) {
            stmt.bindString(7, url);
        }
 
        String fileName = entity.getFileName();
        if (fileName != null) {
            stmt.bindString(8, fileName);
        }
 
        String filePath = entity.getFilePath();
        if (filePath != null) {
            stmt.bindString(9, filePath);
        }
 
        String pkgName = entity.getPkgName();
        if (pkgName != null) {
            stmt.bindString(10, pkgName);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ApkDownloadInfo readEntity(Cursor cursor, int offset) {
        ApkDownloadInfo entity = new ApkDownloadInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // taskId
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // progress
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // statu
            cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4), // total
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // label
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // url
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // fileName
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // filePath
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // pkgName
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ApkDownloadInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTaskId(cursor.getInt(offset + 1));
        entity.setProgress(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setStatu(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setTotal(cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4));
        entity.setLabel(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setUrl(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFileName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFilePath(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setPkgName(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(ApkDownloadInfo entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(ApkDownloadInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
